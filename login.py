# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'login.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import sqlite3

from PyQt5.QtCore import QCoreApplication, QMetaObject, QRect, QSize, Qt
from PyQt5.QtWidgets import QWidget, QDesktopWidget, QApplication, QMessageBox, QLineEdit, QPushButton, QVBoxLayout, \
    QLabel, QStatusBar, QMenuBar, QMainWindow

from principal import UiMainWindow


class MainWindow(QMainWindow):
    def __init__(self):
        super(MainWindow, self).__init__()
        self.statusbar = QStatusBar()
        self.menubar = QMenuBar()
        self.centralwidget = QWidget()
        self.layoutWidget = QWidget(self.centralwidget)
        self.txtPass = QLineEdit(self.layoutWidget)
        self.label_2 = QLabel(self.layoutWidget)
        self.txtUser = QLineEdit(self.layoutWidget)
        self.label = QLabel(self.layoutWidget)
        self.verticalLayout = QVBoxLayout(self.layoutWidget)
        self.btnEntrar = QPushButton(self.centralwidget)
        # conectar no bando de dados
        self.db = sqlite3.connect('dbmehsys.db')
        self.cursor = self.db.cursor()
        MainWindow.setObjectName(self, "MainWindow")
        MainWindow.resize(self, 400, 300)
        MainWindow.setMinimumSize(self, QSize(400, 300))
        self.center()  # centralizar a tela
        self.centralwidget.setObjectName("centralwidget")
        self.btnEntrar.setGeometry(QRect(40, 200, 321, 34))
        self.btnEntrar.setObjectName("btnEntrar")
        self.layoutWidget.setGeometry(QRect(40, 20, 321, 131))
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.txtUser.setClearButtonEnabled(True)
        self.txtUser.setObjectName("txtUser")
        self.txtUser.setFocus()
        self.txtUser.setTabOrder(self.txtUser, self.txtPass)
        self.verticalLayout.addWidget(self.txtUser)
        self.label_2.setObjectName("label_2")
        self.verticalLayout.addWidget(self.label_2)
        self.txtPass.setEchoMode(QLineEdit.Password)
        self.txtPass.setClearButtonEnabled(True)
        self.txtPass.setObjectName("txtPass")
        self.txtPass.setTabOrder(self.txtPass, self.btnEntrar)
        self.verticalLayout.addWidget(self.txtPass)
        self.setCentralWidget(self.centralwidget)
        self.menubar.setGeometry(QRect(0, 0, 400, 30))
        self.menubar.setObjectName("menubar")
        self.setMenuBar(self.menubar)
        self.statusbar.setObjectName("statusbar")
        self.setStatusBar(self.statusbar)

        #  connect evento de botao
        self.btnEntrar.clicked.connect(self.login)

        self.retranslate_ui()
        QMetaObject.connectSlotsByName(self)

    def retranslate_ui(self):
        _translate = QCoreApplication.translate
        self.setWindowTitle(_translate("MainWindow", "Tela Login - Mehsys"))
        self.btnEntrar.setToolTip(_translate("MainWindow", "Entrar"))
        self.btnEntrar.setStatusTip(_translate("MainWindow", "Entrar"))
        self.btnEntrar.setText(_translate("MainWindow", "Entrar"))
        self.label.setToolTip(_translate("MainWindow", "Nome de usuário"))
        self.label.setStatusTip(_translate("MainWindow", "Nome de usuário"))
        self.label.setText(_translate("MainWindow", "Usuário:"))
        self.txtUser.setToolTip(_translate("MainWindow", "Nome de usuário"))
        self.txtUser.setStatusTip(_translate("MainWindow", "Nome de usuário"))
        self.txtUser.setPlaceholderText(_translate("MainWindow", "Nome de usuário"))
        self.label_2.setToolTip(_translate("MainWindow", "Senha do usuário"))
        self.label_2.setStatusTip(_translate("MainWindow", "Senha do usuário"))
        self.label_2.setText(_translate("MainWindow", "Senha:"))
        self.txtPass.setToolTip(_translate("MainWindow", "Senha do usuário"))
        self.txtPass.setStatusTip(_translate("MainWindow", "Senha do usuário"))
        self.txtPass.setPlaceholderText(_translate("MainWindow", "Senha do usuário"))

    #  Função do botão entrar
    def login(self):
        sql = "select * from tbusuarios where login=? and senha=?"
        user = self.txtUser.text()
        password = self.txtPass.text()
        self.cursor.execute(sql, [user, password])
        rs = self.cursor.fetchall()
        if len(user) < 1 or len(password) < 1:
            QMessageBox.warning(self, "Erro ao Logar", "PREENCHA OS CAMPOS LOGIN E SENHA PARA ENTRAR\n\n\nObs: "
                                                        "Usuário padrão(admin), "
                                                        "Senha padrão(1234)", QMessageBox.Ok,
                                 QMessageBox.Ok)
        elif len(rs) > 0:
            if rs[0][5] == 'admin':  # Se perfil == 'admin'
                self.window = UiMainWindow()
                self.window.show()
                self.window.actionAddHor.setEnabled(True)
                self.window.actionUsu_rios.setEnabled(True)
                self.window.actionClientes_2.setEnabled(True)
                self.window.actionHor_rios_2.setEnabled(True)
                self.window.actionServi_os_2.setEnabled(True)
                self.db.close()
                login.close()
            else:  # perfil == 'user'
                self.window = UiMainWindow()
                self.window.show()
                self.db.close()
                login.close()
        else:
            QMessageBox.warning(self, "Erro ao Logar", "USUÁRIO OU SENHA INVÁLIDO(S)\n\n\nObs: Usuário padrão(admin), "
                                                        "Senha padrão(1234)", QMessageBox.Ok,
                                     QMessageBox.Ok)

    #
    # def closeEvent(self, event):
    #     reply = QMessageBox.question(self, "Sair?", "Tem certeza que quer Sair?", QMessageBox.Yes | QMessageBox.No,
    #                                  QMessageBox.No)
    #     if reply == QMessageBox.Yes:
    #         event.accept()
    #     else:
    #         event.ignore()

    # eventos do teclado
    def keyPressEvent(self, event):
        if event.key() == Qt.Key_Enter:
            self.login()
        if event.key() == Qt.Key_Down:
            self.txtPass.setFocus()
        if event.key() == Qt.Key_Up:
            self.txtUser.setFocus()

    def center(self):
        qr = self.frameGeometry()
        cp = QDesktopWidget().availableGeometry().center()
        qr.moveCenter(cp)
        self.move(qr.topLeft())


if __name__ == '__main__':
    import sys
    from Utils import criaBdSqlite
    db = criaBdSqlite.CreateBdSqlite()
    db.create_tables()
    app = QApplication(sys.argv)
    login = MainWindow()
    login.show()
    sys.exit(app.exec_())
